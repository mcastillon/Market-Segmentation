clus <- hclust(dis, method = hc)
cut <- cutree(clus, n)
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = hc, num_clus = n, silhou = sil)
})
})
})
hc_clusters %<>% lapply(., function(d) {
lapply(d, function(hc) {
rbindlist(hc)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(hc_clusters, silhou)
table(cutree(hclust(dist(select(all_dmas, -dma)), method = "single"), 5))
?clusGap
arrange(km_clusters, silhou)
clusgap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15, method = "Lloyd")
clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15, method = "Lloyd")
clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15, algorithm = "Lloyd")
clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15, algorithm = "Lloyd", max.iter = 100, method = "globalSEmax")
clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15, algorithm = "Lloyd", max.iter = 100)
?kmeans
clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15, algorithm = "Lloyd", iter.max = 100)
cg <- clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15,
algorithm = "Lloyd", iter.max = 100)
print(cg, method = "globalSEmax")
print(cg, method = "globalmax")
print(cg, method = "globalSEmax")
cg_km <- cg
rm(cg)
arrange(hc_clusters, silhou)
cluster_numbers <- 2:15
hc_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d,)
lapply(hc_methods, function(hc) {
lapply(cluster_numbers, function(n) {
clus <- hclust(dis, method = hc)
cut <- cutree(clus, n)
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = hc, num_clus = n, silhou = sil)
})
})
})
hc_clusters %<>% lapply(., function(d) {
lapply(d, function(hc) {
rbindlist(hc)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(hc_clusters, silhou)
cg_hc <- clusGap(select(all_dmas, -dma), FUN = hclust, K.max = 15,
method = "single", iter.max = 100)
cg_hc <- clusGap(select(all_dmas, -dma), FUN = hclust, K.max = 15,
method = "single")
traceback()
?hclust
cg_hc <- clusGap(select(all_dmas, -dma), FUN = hclust, K.max = 15)
?clusGap
new_hc_func <- function(x, k, hc, d) {
list(cluster = cutree(hclust(dist(x, method = d), method = hc), k),
k = k)
}
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 15,
hc = "single", d = "euclidean")
print(cg_km, method = "globalSEmax")
print(cg_hc, method = "globalSEmax")
print(cg_hc, method = "globalmax")
arrange(km_clusters, silhou)
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 15,
hc = "ward.D2", d = "euclidean")
print(cg_hc, method = "globalSEmax")
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 21,
hc = "ward.D2", d = "euclidean")
print(cg_hc, method = "globalSEmax")
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 100,
hc = "ward.D2", d = "euclidean")
print(cg_hc, method = "globalSEmax")
print(cg_hc, method = "globalmax")
print(cg_hc, method = "globalSEmax")
print(cg_hc, method = "Tibs2001SEmax")
print(cg_hc, method = "globalSEmax")
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 105,
hc = "ward.D2", d = "euclidean")
print(cg_hc, method = "globalSEmax")
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 15,
hc = "single", d = "euclidean")
print(cg_hc, method = "globalSEmax")
arrange(hc_clusters, silhou)
arrange(km_clusters, silhou)
km_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d)
lapply(km_methods, function(km) {
lapply(cluster_numbers, function(n) {
clus <- kmeans(select(all_dmas, -dma), algorithm = km,
centers = n, nstart = n, iter.max = 100)
cut <- clus$cluster
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = km, num_clus = n, silhou = sil)
})
})
})
km_clusters %<>% lapply(., function(d) {
lapply(d, function(km) {
rbindlist(km)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(km_clusters, silhou)
cutree(hclust(dist(select(all_dmas, -dma)), method = "single"), 4)
table(cutree(hclust(dist(select(all_dmas, -dma)), method = "single"), 4))
?kmeans
km_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d)
lapply(km_methods, function(km) {
lapply(cluster_numbers, function(n) {
clus <- kmeans(dis, algorithm = km,
centers = n, nstart = n, iter.max = 100)
cut <- clus$cluster
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = km, num_clus = n, silhou = sil)
})
})
})
km_clusters %<>% lapply(., function(d) {
lapply(d, function(km) {
rbindlist(km)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(km_clusters, silhou)
km_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d)
lapply(km_methods, function(km) {
lapply(cluster_numbers, function(n) {
clus <- kmeans(select(all_dmas, -dma), algorithm = km,
centers = n, nstart = n, iter.max = 100)
cut <- clus$cluster
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = km, num_clus = n, silhou = sil)
})
})
})
km_clusters %<>% lapply(., function(d) {
lapply(d, function(km) {
rbindlist(km)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(km_clusters, silhou)
cg_km <- clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 15, K.max = 15,
algorithm = "Hartigan-Wong", iter.max = 100)
print(cg_km, method = "globalSEmax")
cluster_numbers <- 2:21
km_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d)
lapply(km_methods, function(km) {
lapply(cluster_numbers, function(n) {
clus <- kmeans(select(all_dmas, -dma), algorithm = km,
centers = n, nstart = n, iter.max = 100)
cut <- clus$cluster
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = km, num_clus = n, silhou = sil)
})
})
})
km_clusters %<>% lapply(., function(d) {
lapply(d, function(km) {
rbindlist(km)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(km_clusters, silhou)
cg_km <- clusGap(select(all_dmas, -dma), FUN = kmeans, nstart = 21, K.max = 21,
algorithm = "Hartigan-Wong", iter.max = 100)
print(cg_km, method = "globalSEmax")
hc_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d,)
lapply(hc_methods, function(hc) {
lapply(cluster_numbers, function(n) {
clus <- hclust(dis, method = hc)
cut <- cutree(clus, n)
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = hc, num_clus = n, silhou = sil)
})
})
})
hc_clusters %<>% lapply(., function(d) {
lapply(d, function(hc) {
rbindlist(hc)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(hc_clusters, silhou)
library(ggplot2)
?geom_boxplot
ggplot(data = hc_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot()
ggplot(data = hc_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
ggplot(data = km_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
ggplot(data = km_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot(varwidth = T) + geom_jitter()
ggplot(data = km_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
ggplot(data = hc_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
arrange(hc_clusters, silhou) %>% filter(clus_method == "single")
210/3
210/5
210/10
cluster_numbers <- 2:30
hc_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d,)
lapply(hc_methods, function(hc) {
lapply(cluster_numbers, function(n) {
clus <- hclust(dis, method = hc)
cut <- cutree(clus, n)
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = hc, num_clus = n, silhou = sil)
})
})
})
hc_clusters %<>% lapply(., function(d) {
lapply(d, function(hc) {
rbindlist(hc)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(hc_clusters, silhou)
ggplot(data = hc_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 30,
hc = "average", d = "euclidean")
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 30, B = 70,
hc = "average", d = "euclidean")
print(cg_hc, method = "globalSEmax")
km_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d)
lapply(km_methods, function(km) {
lapply(cluster_numbers, function(n) {
clus <- kmeans(select(all_dmas, -dma), algorithm = km,
centers = n, nstart = n, iter.max = 100)
cut <- clus$cluster
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = km, num_clus = n, silhou = sil)
})
})
})
km_clusters %<>% lapply(., function(d) {
lapply(d, function(km) {
rbindlist(km)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(km_clusters, silhou)
ggplot(data = km_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
cg_km <- clusGap(select(all_dmas, -dma), FUN = kmeans, K.max = 30, B = 70,
algorithm = "Hartigan-Wong", nstart = 30, iter.max = 100)
print(cg_km, method = "globalSEmax")
arrange(km_clusters, silhou)
print(cg_hc, method = "globalSEmax")
filter(hc_clusters, clus_method=="average", num_clus==28)
filter(km_clusters, clus_method=="Hartigan-Wong", num_clus==27)
ggplot(data = km_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
ggplot(data = hc_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
install.packages("clusterCrit")
library(clusterCrit)
best_hc <- hclust(dist(select(all_dmas), method = "euclidean"),
method = "average")
best_hc <- hclust(dist(select(all_dmas, -dma), method = "euclidean"),
method = "average")
hc_cut <- cutree(best_hc, 28)
best_km <- kmeans(select(all_dmas, -dma),
nstart = 30,
centers = 27,
iter.max = 100)
best_km <- kmeans(select(all_dmas, -dma), algorithm = "Hartigan-Wong",
nstart = 30, centers = 27, iter.max = 100)
km_cut <- best_km$cluster
intCriteria(select(all_dmas, -dma), hc_cut, "Calinski_Harabasz")
intCriteria(matrix(select(all_dmas, -dma)), hc_cut, "Calinski_Harabasz")
traceback()
intCriteria(as.matrix(select(all_dmas, -dma)), hc_cut, "Calinski_Harabasz")
?REAL
intCriteria(as.matrix(select(all_dmas, -dma)), hc_cut, "all")
intCriteria(dist(select(all_dmas, -dma)), hc_cut, "all")
as.matrix(select(all_dmas, -dma))
count(is.numeric(as.matrix(select(all_dmas, -dma))))
table(is.numeric(as.matrix(select(all_dmas, -dma))))
intCriteria(dist(select(all_dmas, -dma)), hc_cut, "all")
install.packages("fpc")
library(fpc)
calinhara(select(all_dmas, -dma), hc_cut)
calinhara(select(all_dmas, -dma), km_cut)
all_dmas[, cluster := as.character(hc_cut)]
all_dmas
sample(28,1)
select(all_dmas, dma, cluster) %>% filter(cluster=="9")
sample(28,1)
select(all_dmas, dma, cluster) %>% filter(cluster=="10")
select(all_dmas, dma, cluster) %>% filter(grepl(dma, "San F"))
?grepl
select(all_dmas, dma, cluster) %>% filter(grepl("San F", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="26")
select(all_dmas, dma, cluster) %>% filter(grepl("Wash", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="28")
select(all_dmas, dma, cluster) %>% filter(cluster=="1")
select(all_dmas, dma, cluster) %>% filter(grepl("New Y", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="20")
select(all_dmas, dma, cluster) %>% filter(cluster=="2")
select(all_dmas, dma, cluster) %>% filter(grepl("Las V", dma))
select(all_dmas, dma, cluster) %>% filter(grepl("Los Ange", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="17")
select(all_dmas, dma, cluster) %>% filter(grepl("Miami", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="18")
select(all_dmas, dma, cluster) %>% filter(grepl("Austin", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="4")
select(all_dmas, dma, cluster) %>% filter(cluster=="3")
select(all_dmas, dma, cluster) %>% filter(cluster=="5")
select(all_dmas, dma, cluster) %>% filter(cluster=="6")
select(all_dmas, dma, cluster) %>% filter(cluster=="7")
select(all_dmas, dma, cluster) %>% filter(cluster=="8")
select(all_dmas, dma, cluster) %>% filter(cluster=="9")
select(all_dmas, dma, cluster) %>% filter(cluster=="10")
select(all_dmas, dma, cluster) %>% filter(cluster=="11")
select(all_dmas, dma, cluster) %>% filter(cluster=="12")
select(all_dmas, dma, cluster) %>% filter(cluster=="13")
select(all_dmas, dma, cluster) %>% filter(cluster=="14")
select(all_dmas, dma, cluster) %>% filter(cluster=="15")
select(all_dmas, dma, cluster) %>% filter(cluster=="16")
select(all_dmas, dma, cluster) %>% filter(cluster=="17")
select(all_dmas, dma, cluster) %>% filter(cluster=="18")
select(all_dmas, dma, cluster) %>% filter(cluster=="19")
select(all_dmas, dma, cluster) %>% filter(cluster=="20")
select(all_dmas, dma, cluster) %>% filter(cluster=="21")
select(all_dmas, dma, cluster) %>% filter(cluster=="22")
select(all_dmas, dma, cluster) %>% filter(cluster=="23")
select(all_dmas, dma, cluster) %>% filter(cluster=="24")
select(all_dmas, dma, cluster) %>% filter(cluster=="25")
select(all_dmas, dma, cluster) %>% filter(cluster=="26")
select(all_dmas, dma, cluster) %>% filter(cluster=="27")
select(all_dmas, dma, cluster) %>% filter(cluster=="28")
sample(2,1)
sample(5,1)
best_hc
plot(best_hc)
plot(best_hc, labels = all_dmas$dma)
?cutree
best_hc <- hclust(dist(scale(select(all_dmas, -dma)), method = "euclidean"),
method = "average")
best_hc <- hclust(dist(scale(select(all_dmas, -dma, -cluster)), method = "euclidean"),
method = "average")
hc_cut <- cutree(best_hc, 28)
calinhara(select(all_dmas, -dma, -cluster), hc_cut)
plot(best_hc, labels = all_dmas$dma)
all_dmas[, cluster := as.character(hc_cut)]
filter(all_dmas, grep("Houston", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="4")
filter(all_dmas, grep("New York", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="23")
filter(all_dmas, grep("Los A", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="19")
filter(all_dmas, grep("San F", dma))
select(all_dmas, dma, cluster) %>% filter(cluster=="26")
filter(all_dmas, grep("Wash", dma))
dmas
all_dmas <- Reduce(merge, dmas)
hc_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d,)
lapply(hc_methods, function(hc) {
lapply(cluster_numbers, function(n) {
clus <- hclust(dis, method = hc)
cut <- cutree(clus, n)
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = hc, num_clus = n, silhou = sil)
})
})
})
hc_clusters %<>% lapply(., function(d) {
lapply(d, function(hc) {
rbindlist(hc)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(hc_clusters, silhou)
ggplot(data = hc_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
cg_hc <- clusGap(select(all_dmas, -dma), FUN = new_hc_func, K.max = 30, B = 70,
hc = "average", d = "euclidean")
print(cg_hc, method = "globalSEmax")
sample(3,1)
km_clusters <- lapply(distances, function(d) {
dis <- dist(select(all_dmas, -dma), method = d)
lapply(km_methods, function(km) {
lapply(cluster_numbers, function(n) {
clus <- kmeans(select(all_dmas, -dma), algorithm = km,
centers = n, nstart = n, iter.max = 100)
cut <- clus$cluster
sil <- summary(silhouette(cut, dis))$avg.width
data.table(di = d, clus_method = km, num_clus = n, silhou = sil)
})
})
})
km_clusters %<>% lapply(., function(d) {
lapply(d, function(km) {
rbindlist(km)
})
}) %>% lapply(function(d) {
rbindlist(d)
}) %>% rbindlist()
arrange(km_clusters, silhou)
ggplot(data = km_clusters, aes(factor(clus_method), silhou)) +
geom_boxplot() + geom_jitter()
cg_km <- clusGap(select(all_dmas, -dma), FUN = kmeans, K.max = 30, B = 70,
algorithm = "Hartigan-Wong", nstart = 30, iter.max = 100)
print(cg_km, method = "globalSEmax")
best_hc <- hclust(dist(select(all_dmas, -dma), method = "euclidean"),
method = "average")
hc_cut <- cutree(best_hc, 14)
best_km <- kmeans(select(all_dmas, -dma), algorithm = "Hartigan-Wong",
nstart = 30, centers = 27, iter.max = 100)
km_cut <- best_km$cluster
calinhara(select(all_dmas, -dma, -cluster), hc_cut)
calinhara(select(all_dmas, -dma), hc_cut)
calinhara(select(all_dmas, -dma), km_cut)
cluster.stats(select(all_dmas, -dma), hc_cut, km_cut)
hc_cut
km_cut
arrange(km_clusters, silhou)
arrange(hc_clusters, silhou)
?cluster.stats
cluster.stats(dist(select(all_dmas, -dma)), hc_cut, km_cut)
arrange(hc_clusters, silhou)
arrange(hc_clusters, silhou) %>% filter(clus_method=="average")
arrange(km_clusters, silhou) %>% filter(cluster_method == "Hartigan-Wong")
arrange(km_clusters, silhou) %>% filter(clust_method == "Hartigan-Wong")
arrange(km_clusters, silhou) %>% filter(clus_method == "Hartigan-Wong")
cluster.stats(dist(select(all_dmas, -dma)), hc_cut, km_cut)
calinhara(select(all_dmas, -dma), hc_cut)
calinhara(select(all_dmas, -dma), km_cut)
all_dmas[, cluster := as.character(km_cut)]
all_dmas
select(all_dmas, dma, cluster) %>% filter(cluster=="1")
select(all_dmas, dma, cluster) %>% filter(cluster=="2")
select(all_dmas, dma, cluster) %>% filter(cluster=="3")
select(all_dmas, dma, cluster) %>% filter(cluster=="4")
select(all_dmas, dma, cluster) %>% filter(cluster=="5")
select(all_dmas, dma, cluster) %>% filter(cluster=="6")
select(all_dmas, dma, cluster) %>% filter(cluster=="7")
select(all_dmas, dma, cluster) %>% filter(cluster=="8")
select(all_dmas, dma, cluster) %>% filter(cluster=="9")
select(all_dmas, dma, cluster) %>% filter(cluster=="10")
select(all_dmas, dma, cluster) %>% filter(cluster=="11")
select(all_dmas, dma, cluster) %>% filter(cluster=="12")
select(all_dmas, dma, cluster) %>% filter(cluster=="13")
select(all_dmas, dma, cluster) %>% filter(cluster=="14")
select(all_dmas, dma, cluster) %>% filter(cluster=="15")
select(all_dmas, dma, cluster) %>% filter(cluster=="16")
select(all_dmas, dma, cluster) %>% filter(cluster=="17")
select(all_dmas, dma, cluster) %>% filter(cluster=="18")
select(all_dmas, dma, cluster) %>% filter(cluster=="19")
select(all_dmas, dma, cluster) %>% filter(cluster=="20")
select(all_dmas, dma, cluster) %>% filter(cluster=="21")
select(all_dmas, dma, cluster) %>% filter(cluster=="22")
select(all_dmas, dma, cluster) %>% filter(cluster=="23")
select(all_dmas, dma, cluster) %>% filter(cluster=="24")
select(all_dmas, dma, cluster) %>% filter(cluster=="25")
select(all_dmas, dma, cluster) %>% filter(cluster=="26")
select(all_dmas, dma, cluster) %>% filter(cluster=="27")
select(all_dmas, dma, cluster) %>% filter(cluster=="28")
library(DT)
install.packages("DT")
select(all_dmas, cluster)
select(all_dmas, dma, cluster)
library(rmarkdown)
rmarkdown::render("R\market_segmentation.R")
rmarkdown::render("R/market_segmentation.R")
?clusGap
DT::datatable(select(all_dmas, dma, cluster))
devtools::install_github('rstudio/DT')
Dt::datatable(select(all_dmas, dma, cluster)_
Dt::datatable(select(all_dmas, dma, cluster))
DT::datatable(select(all_dmas, dma, cluster))
hc_cut <- cutree(best_hc, 30)
calinhara(select(all_dmas, -dma), hc_cut)
calinhara(select(all_dmas, -dma, -cluster), hc_cut)
cg_km$Tab
cg_km$B
cg_km$n
?clusGap
plot(cg_km)
plot(cg_hc)
tbl_dt(dmas)
tbl_dt(all_dmas)
hc_cut <- cutree(best_hc, 30)
calinhara(select(all_dmas, -dma, -cluster), hc_cut)
?datatable
